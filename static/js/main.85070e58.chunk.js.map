{"version":3,"sources":["InfoBox.js","Table.js","util.js","LineGraph.js","Changeview.js","Map.js","App.js","index.js"],"names":["InfoBox","title","cases","active","isRed","isYellow","total","props","Card","onClick","className","CardContent","Typography","color","Table","countries","map","country","casesTypeColors","hexa","mulitiplier","recovered","deaths","sortData","data","sort","a","b","prettyPrintData","stat","numeral","format","showDataOnMap","casesType","Circle","center","countryInfo","lat","long","fillOpacity","pathOptions","fillColor","radius","Math","sqrt","Popup","style","backgroundImage","flag","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildCharData","lastDataPoint","caseType","charData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","console","log","chartData","fetchData","length","datasets","backgroundColor","borderColor","ChangeView","zoom","useMap","setView","Map","MapContainer","TileLayer","url","attribution","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","name","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","FormControl","Select","variant","onChange","MenuItem","e","todayCases","todayRecovered","todayDeaths","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.85070e58.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./InfoBox.css\";\r\n\r\nfunction InfoBox({ title, cases, active, isRed, isYellow, total, ...props }) {\r\n  return (\r\n    <Card\r\n      onClick={props.onClick}\r\n      className={`infoBox ${active && \"infoBox--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      } ${isYellow && \"infoBox-yellow\"}`}\r\n    >\r\n      <CardContent>\r\n        {/* title---> CoronaVirus Cases */}\r\n        <Typography className=\"infoBox_title\" color=\"textSecondary\">\r\n          {title}\r\n        </Typography>\r\n\r\n        {/* Number of cases +120k */}\r\n        <h2\r\n          className={`infoBox_cases ${isYellow && \"info-yellow\"} ${\r\n            isRed && \"info-red\"\r\n          }`}\r\n        >\r\n          {cases}\r\n        </h2>\r\n\r\n        {/* +1.2M total */}\r\n        <Typography className=\"infoBox_total\" color=\"textSecondary\">\r\n          {total} Total\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React from 'react'\r\nimport './Table.css'\r\n\r\nfunction Table({ countries }) {\r\n    return (\r\n        <div className=\"table\">\r\n            {countries.map(({ country, cases }) => (\r\n                <tr>\r\n                    <td>{country}</td>\r\n                    <td><strong>{cases}</strong></td>\r\n                </tr>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import { Circle, Popup } from \"react-leaflet\";\r\nimport numeral from \"numeral\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hexa: \"#CC1034\",\r\n    mulitiplier: 800\r\n  },\r\n\r\n  recovered: {\r\n    hexa: \"#7DD71D\",\r\n    mulitiplier: 1200\r\n  },\r\n\r\n  deaths: {\r\n    hexa: \"#f39c12\",\r\n    mulitiplier: 2000\r\n  }\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n\r\nexport const prettyPrintData = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0,0a\")}` : \"+0\";\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      fillOpacity={0.4}\r\n      pathOptions={{\r\n        color: casesTypeColors[casesType].hexa,\r\n        fillColor: casesTypeColors[casesType].hexa\r\n      }}\r\n      radius={\r\n        Math.sqrt(country[casesType] / 10) *\r\n        casesTypeColors[casesType].mulitiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          />\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases:{numeral(country.cases).format(0, 0)}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered:{numeral(country.recovered).format(0, 0)}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths:{numeral(country.deaths).format(0, 0)}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0\r\n    }\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      }\r\n    }\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\"\r\n        }\r\n      }\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\nconst buildCharData = (data, caseType = \"cases\") => {\r\n  const charData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      const newDataPoint = {\r\n        x: date,\r\n        y: data[caseType][date] - lastDataPoint\r\n      };\r\n      charData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[caseType][date];\r\n  }\r\n  return charData;\r\n};\r\n\r\nfunction LineGraph({ caseType = \"cases\", ...props }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastDays=120\")\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          let chartData = buildCharData(data, caseType);\r\n          setData(chartData);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [caseType]);\r\n  return (\r\n    <div className={props.className}>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data\r\n              }\r\n            ]\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import { useMap } from \"react-leaflet\";\r\n\r\nfunction ChangeView({ center, zoom }) {\r\n  const map = useMap();\r\n  map.setView(center, zoom);\r\n  return null;\r\n}\r\n\r\nexport default ChangeView;\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer } from \"react-leaflet\";\r\nimport \"./Map.css\";\r\nimport ChangeView from \"./Changeview\";\r\nimport { showDataOnMap } from \"./util\";\r\n\r\nfunction Map({ countries, casesType, center, zoom }) {\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer center={center} zoom={zoom}>\r\n        <ChangeView center={center} zoom={zoom} />\r\n        <TileLayer\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n        />\r\n        {showDataOnMap(countries, casesType)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map;\r\n","import \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport {\n  Card,\n  CardContent,\n  FormControl,\n  MenuItem,\n  Select\n} from \"@material-ui/core\";\nimport InfoBox from \"./InfoBox\";\nimport Table from \"./Table\";\nimport { sortData, prettyPrintData } from \"./util.js\";\nimport LineGraph from \"./LineGraph.js\";\nimport Map from \"./Map\";\nimport \"leaflet/dist/leaflet.css\";\n\nfunction App() {\n  const [countries, setCountries] = useState([\"USA\", \"UK\", \"INDIA\"]);\n  const [country, setCountry] = useState([\"worldwide\"]);\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n\n        setCountryInfo(data);\n        setCountry(countryCode);\n        //below two lines are not working\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(4);\n      });\n  };\n\n  console.log(countryInfo);\n  return (\n    <div className=\"app\">\n      <div className=\"app_left\">\n        <div className=\"app_header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => (\n                <MenuItem value={country.value}>{country.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n\n        <div className=\"app_stats\">\n          <InfoBox\n            isRed\n            active={casesType === \"cases\"}\n            onClick={(e) => setCasesType(\"cases\")}\n            title=\"Coronavirus cases\"\n            cases={prettyPrintData(countryInfo.todayCases)}\n            total={prettyPrintData(countryInfo.cases)}\n          />\n          <InfoBox\n            active={casesType === \"recovered\"}\n            onClick={(e) => setCasesType(\"recovered\")}\n            title=\"Recovered\"\n            cases={prettyPrintData(countryInfo.todayRecovered)}\n            total={prettyPrintData(countryInfo.recovered)}\n          />\n          <InfoBox\n            isYellow\n            active={casesType === \"deaths\"}\n            onClick={(e) => setCasesType(\"deaths\")}\n            title=\"Deaths\"\n            cases={prettyPrintData(countryInfo.todayDeaths)}\n            total={prettyPrintData(countryInfo.deaths)}\n          />\n        </div>\n\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app_right\">\n        <CardContent>\n          <h3>Live Cases by country</h3>\n          <Table countries={tableData} />\n          <h3>Worldwide New Cases</h3>\n          <LineGraph className=\"app_graph\" caseType={casesType} />\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}